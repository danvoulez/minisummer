{
  "version": 1,
  "tables": [
    {
      "name": "logline",
      "primary_key": "id",
      "columns": [
        {"name": "id", "type": "uuid", "default": "gen_ulid()"},
        {"name": "tenant_id", "type": "uuid", "references": "tenants(id)"},
        {"name": "who", "type": "text"},
        {"name": "did", "type": "text", "default": "registrou"},
        {"name": "this", "type": "jsonb"},
        {"name": "when", "type": "timestamptz", "default": "now()"},
        {"name": "confirmed_by", "type": "text"},
        {"name": "status", "type": "text", "generated": "status"},
        {"name": "valid", "type": "boolean", "generated": "valid"},
        {"name": "embedding", "type": "real[]"},
        {"name": "causality", "type": "uuid[]"},
        {"name": "severity", "type": "smallint", "default": "1"},
        {"name": "trace_id", "type": "uuid", "default": "gen_random_uuid()"},
        {"name": "span_id", "type": "uuid", "default": "gen_random_uuid()"}
      ],
      "partition": {
        "method": "list",
        "column": "status",
        "tables": [
          {"name": "logline_raw", "values": ["raw"]},
          {"name": "logline_enriched", "values": ["enriched"]},
          {"name": "logline_contextual", "values": ["contextual"]}
        ]
      }
    },
    {
      "name": "people",
      "primary_key": "id",
      "columns": [
        {"name": "id", "type": "uuid", "default": "gen_ulid()"},
        {"name": "tenant_id", "type": "uuid"},
        {"name": "name", "type": "text"},
        {"name": "source", "type": "text"},
        {"name": "created_by", "type": "text"},
        {"name": "ghost_reason", "type": "text"},
        {"name": "valid", "type": "boolean", "default": "false"},
        {"name": "identidade_ativa", "type": "boolean", "default": "false"}
      ]
    }
  ],
  "functions": [
    {
      "name": "buscar_logs",
      "returns": "setof logline",
      "language": "plpgsql",
      "definition": "DECLARE\n  vetor REAL[];\nBEGIN\n  vetor := gerar_embedding(query);\n  RETURN QUERY SELECT * FROM logline WHERE status = 'contextual' AND embedding <=> vetor < 0.25 ORDER BY embedding <=> vetor;\nEND;"
    },
    {
      "name": "enriquecer_logline",
      "returns": "trigger",
      "language": "plpgsql",
      "definition": "BEGIN\n  IF NEW.status = 'raw' THEN\n    NEW.this := NEW.this || jsonb_build_object('tags', ARRAY['auto', split_part(NEW.who, ':', 1)], 'enriched_at', now()::text);\n  END IF;\n  RETURN NEW;\nEND;"
    }
  ]
}
